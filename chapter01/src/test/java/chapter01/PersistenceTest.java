package chapter01;

import chapter01.pojo.MessageEntity;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import static org.testng.Assert.assertEquals;

public class PersistenceTest {

	final String DROP = "drop table messages if exists";
	final String CREATE = "create table messages(" +
			"ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
			"text VARCHAR(255) NOT NULL);";
	final String INSERT = "insert into messages(text) values(?)";

	final String SELECT = "select id, text from messages";
	Connection getConnection() throws SQLException {
		return DriverManager.getConnection("jdbc:h2:./db1", "sa", "");
	}

	@BeforeClass
	public void setup() {
		try(Connection connection = getConnection()) {
			PreparedStatement statement = connection.prepareStatement(DROP);
			statement.execute();
			statement = connection.prepareStatement(CREATE);
			statement.execute();
		} catch (SQLException e){
			e.printStackTrace();
			throw new RuntimeException(e);
		}
	}

	void saveMessage(String text) {
		try (Connection connection = getConnection()) {
			PreparedStatement statement = connection.prepareStatement(INSERT);
			statement.setString(1, text);
			statement.execute();
		} catch (SQLException e){
			e.printStackTrace();
			throw new RuntimeException(e);
		}
	}

	@Test
	void readMessage() {
		String messageText = "Hello world!";
		saveMessage(messageText);

		List<MessageEntity> list = new ArrayList<>();

		try (Connection connection = getConnection()) {
			PreparedStatement statement = connection.prepareStatement(SELECT);
			ResultSet set = statement.executeQuery();
			while (set.next()) {
				MessageEntity message = new MessageEntity();
				message.setId(set.getLong(1));
				message.setText(set.getString(2));
				list.add(message);
			}
		} catch (SQLException e){
			e.printStackTrace();
			throw new RuntimeException(e);
		}

		assertEquals(list.size(), 1);
		assertEquals(list.get(0).getText(), messageText);
	}

}
